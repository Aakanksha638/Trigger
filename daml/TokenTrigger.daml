module TokenTrigger where

import Daml.Trigger
import TokenExample
import DA.Action (void)

setup : Trigger ()
setup = Trigger
  { initialize = pure ()
  , rule = ruleFunc
  , updateState = \_ -> pure ()
  , registeredTemplates = RegisteredTemplates [registeredTemplate @Token]
  , heartbeat = None
  }

ruleFunc : Party -> TriggerA () ()
ruleFunc _ = do
  tokens <- query @Token
  let cmds =
        [ exerciseCmd cid Redeem
        | (cid, token) <- tokens
        , token.amount < 50.0
        ]
  void (emitCommands cmds [])
